openapi: 3.0.0
info:
  version: 1.0.0
  title: Nacomer-API Specification
  description: This is the specification of ThreeGoodThings-API. See [https://github.com/nacomer/nacomer_express](https://github.com/nacomer/nacomer_express)
paths:
  /v1/chatComments:
    get:
      summary: Get all event chat records.
      description: 特定イベントの全チャットレコードを返却します。
      parameters:
      - name: "x-googleid"
        in: "header"
        description: "infomation of logged in user googleID"
        schema:
          type: "string"
      - name: "eventId"
        in: "query"
        description: "target event ID"
        schema:
          type: "string"
      responses:
        '200':
          description: HTTPステータスコード200と以下の情報を含むJSONオブジェクトを返します。
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: "object"
                  properties:
                    id:
                      type: string
                      example: "fdc357de-4d85-4e4f-9c10-6d9bd5143849"
                    participantId:
                      type: string
                      example: "817a9938-a2f6-4f8e-8f50-86ed47045c6e"
                    eventId:
                      type: string
                      example: "0f391287-b00d-43b2-85aa-78b300b18682"
                    comment:
                      type: string
                      example: "よろしくお願いします"
                    date:
                      type: string
                      example: "2020-11-20T07:06:09.247Z"
                    user:
                      type: "object"
                      properties: 
                        id:
                          type: string
                          example: "4a1f6310-1b15-4c10-8fd4-fd2140e8d03b"
                        name:
                          type: string
                          example: "一郎"
                        googleId:
                          type: string
                          example: "hogehogegoogleid1"
                        picture:
                          type: string
                          example: "https://hogehoge/1"

    post:
      summary: Post a comment to specific event chat.
      description: チャットテーブルにイベントIDとユーザID、コメント内容を含むレコードを追加します.
      parameters:
      - name: "x-googleid"
        in: "header"
        description: "infomation of logged in user googleID"
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema: 
              type: "object"
              properties:
                eventId:
                  type: string
                  example: 0f391287-b00d-43b2-85aa-78b300b18682
                comment:
                  type: string
                  example: よろしくお願いします！
      responses:
        '201':
          description: chatcommentテーブルにレコードを挿入しHTTPステータスコード201が返却されます。
        '500':
          description: 挿入データが不正の場合、HTTPステータスコード500が返却されます。

  /v1/events/{eventId}:
    get:
      summary: show event details.
      description: |
                paramsで指定されたIDのイベントの詳細を返します。
      parameters:
        - in: "header"
          name: "x-googleid"
          description: "infomation of logged in user googleID"
          schema:
            type: "string"
        - in: "path"
          name: "eventId"
          description: "specific event ID"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: HTTPステータスコード200と以下の情報を含むJSONオブジェクトを返します。
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: string
                    example: a5456c30-439f-4ab9-8380-ce49997f4f79
                  subject:
                    type: string
                    example: シャドウレイヤーズやります
                  ownerId:
                    type: string
                    example: 6952a2a8-6147-4fdf-a564-be073533dccd
                  deadline:
                    type: string
                    example: "2020-12-10T14:00:00.000Z"
                  start:
                    type: string
                    example: "2020-12-17T10:00:00.000Z"
                  end:
                    type: string
                    example: "2020-12-17T13:00:00.000Z"
                  maxpart: 
                    type: number
                    example: 10
                  minpart: 
                    type: number
                    example: 5
                  place:
                    type: string
                    example: 新宿ピカデリー
                  description:
                    type: string
                    example: 初心者歓迎です。
                  hobbyId:
                    type: string
                    example: 5efb5e1b-e34e-424a-a226-e47fd85b2cfc
                  properties:
                    type: array
                    items: 
                      properties:
                        id:
                          type: string
                          example: efa14ed1-c3a6-4ac4-8d63-23a1cdfed05a
                        name:
                          type: string
                          example: 急募
                        category: 
                          type: string
                          example: alarm
                  users:
                    type: array
                    items: 
                      properties:
                        id:
                          type: string
                          example: 6952a2a8-6147-4fdf-a564-be073533dccd
                        name:
                          type: string
                          example: 山田一郎
                        googleId:
                          type: string
                          example: hogegoogleid1
                        picture:
                          type: string
                          example: 'https://hogehoge/1'

  /v1/hobbies/{hobbyId}:
    get:
      summary: show events related specific hobby ID.
      description: |
                paramsで指定されたhobbyIDに関連するイベントを返します。
      parameters:
        - in: "header"
          name: "x-googleid"
          description: "infomation of logged in user googleID"
          schema:
            type: "string"
        - in: "path"
          name: "hobbyId"
          description: "specific hobbyID"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: HTTPステータスコード200と以下の情報を含むJSONオブジェクトを返します。
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: string
                    example: a5456c30-439f-4ab9-8380-ce49997f4f79
                  name:
                    type: string
                    example: シャドウレイヤーズ
                  picture:
                    type: string
                    example: https://hogehoge/1
                  events:
                    type: array
                    items: 
                      properties:
                        id:
                          type: string
                          example: a5456c30-439f-4ab9-8380-ce49997f4f79
                        subject:
                          type: string
                          example: シャドウレイヤーズやります
                        ownerId:
                          type: string
                          example: 6952a2a8-6147-4fdf-a564-be073533dccd
                        deadline:
                          type: string
                          example: "2020-12-10T14:00:00.000Z"
                        start:
                          type: string
                          example: "2020-12-17T10:00:00.000Z"
                        end:
                          type: string
                          example: "2020-12-17T13:00:00.000Z"
                        maxpart: 
                          type: number
                          example: 10
                        minpart: 
                          type: number
                          example: 5
                        place:
                          type: string
                          example: 新宿ピカデリー
                        description:
                          type: string
                          example: 初心者歓迎です。
                        hobbyId:
                          type: string
                          example: 5efb5e1b-e34e-424a-a226-e47fd85b2cfc

  /v1/login:
    post:
      summary: |
              Check whether the user with specified google ID does exist in "users" table. 
              if not, add the user into "users" table.
      description: |
                指定したGoogleIDのユーザが"users"tableに存在するかどうかを確認します。 
                いない場合はユーザを"users"tableに追加します。
      parameters:
        - in: "header"
          name: "x-googleid"
          description: "infomation of logged in user googleID"
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema: 
              type: "object"
              properties:
                userName:
                  type: string
                  example: John Doe
                picture:
                  type: string
                  example: https://xxx.googleusercontent.com/-xxxx/xxx/xxx/xxx/xxx/photo.jpg
      responses:
        '200':
          description: 既にユーザが存在した場合はHTTPステータスコード200を返します。
        '201':
          description: 新規でユーザを作成した場合はHTTPステータスコード201を返します。

  /v1/partcipant:
    post:
      summary: apply event
      description: 特定イベント参加のため、participantsテーブルにレコードを追加します。
      parameters:
      - name: "x-googleid"
        in: "header"
        description: "infomation of target user googleID"
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema: 
              type: "object"
              properties:
                eventId:
                  type: string
                  example: "d49d7e74-3fdf-4089-a6ff-aeae66cbd644"
      responses:
        '201':
          description: 新規でレコードを作成し、HTTPステータスコード201を返します。
        '409':
          description: 既に参加済の場合、レコードは作成せずHTTPステータスコード201を返します。

    delete:
      summary: cansel event
      description: 特定イベント参加取消のため、participantsテーブルからレコードを削除します。
      parameters:
      - name: "x-googleid"
        in: "header"
        description: "infomation of target user googleID"
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema: 
              type: "object"
              properties:
                eventId:
                  type: string
                  example: "d49d7e74-3fdf-4089-a6ff-aeae66cbd644"
      responses:
        '204':
          description: レコードを削除し、HTTPステータスコード204を返します。
