version: 2.1 
orbs:
  aws-ecr: circleci/aws-ecr@6.14.0
  aws-ecs: circleci/aws-ecs@1.4.0
workflows:
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /v.*/
      - aws-ecr/build-and-push-image:
          filters:
            tags:
              only: /v.*/
            branches:
              only: main
          account-url: ACCOUNT_URL
          repo: "${AWS_RESOURCE_NAME_PREFIX}"
          region: AWS_DEFAULT_REGION
          tag: "${CIRCLE_SHA1}"
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          aws-region: ${AWS_DEFAULT_REGION}
          family: "${AWS_RESOURCE_NAME_PREFIX}-service"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
          service-name: "{$AWS_RESOURCE_NAME_PREFIX}-service"
          container-image-name-updates: "container=${AWS_RESOURCE_NAME_PREFIX}-service,tag=${CIRCLE_SHA1}"
    
jobs:
  build:
    docker:
      - image: circleci/node:10.16.3
        environment:
          DB_USER: postgres
          DB_NAME: nacomer
          DB_HOST: 127.0.0.1
          JWT_KEY: 071682fa4952f593f1a2293aa3cdb9b8d7e669f5a4a37049e714f660f264087c6411e2b39339e992848373505cd73595433cd1b84623cf4101989b6bd273c2db
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: postgres 
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: nacomer
    steps:
      - checkout
      - run:
          name: start
          command: echo "ci start"
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - run:
          name: install-yarn
          command: yarn --frozen-lockfile
          paths:
            - ./node_modules
      - run:
          name: migrate
          command: yarn migrate
      - run:
          name: seed
          command: yarn seed
      - run:
          name: test
          command: yarn test